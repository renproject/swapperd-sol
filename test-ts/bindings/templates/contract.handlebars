// tslint:disable

import BN from "bn.js";
import { Transaction as TxIn, EventLog, TransactionReceipt } from "web3-core/types";
import { provider } from "web3-providers/types";
import { PromiEvent } from "web3-core/types";

interface TxOut { receipt: TransactionReceipt; tx: string; logs: EventLog[]; }

type BigNumber = string | number | BN;

{{#if events}}
export const {{contractName}}Events = {
    {{#each events}}
    {{> event}}
    {{/each}}
};
{{/if}}

export interface {{contractName}}Contract {
{{#each methods}}
    {{#this.constant}}
    {{this.tsName}}({{> typed_params inputs=inputs}}): Promise<{{> return_type outputs=outputs}}>;
    {{/this.constant}}
    {{^this.constant}}
    {{this.tsName}}({{> typed_params inputs=inputs}}): PromiEvent<TxOut>;
    {{/this.constant}}
{{/each}}
    address: string;
}

export interface {{contractName}}Artifact {
    address: string;
    "new"({{> typed_params inputs=ctor.inputs}}): Promise<{{contractName}}Contract>;
    at(address: string): Promise<{{contractName}}Contract>;
    deployed(): Promise<{{contractName}}Contract>;
    setProvider(provider: provider): void;
}
